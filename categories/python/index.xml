<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Anders Pitman&#39;s blog</title>
    <link>https://anderspitman.net/categories/python/</link>
    <description>Recent content in Python on Anders Pitman&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Jul 2014 10:41:56 +0000</lastBuildDate>
    
	<atom:link href="https://anderspitman.net/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Asterisk ARI Quickstart Tutorial in Python</title>
      <link>https://anderspitman.net/2014/07/21/asterisk-ari-quickstart-in-python/</link>
      <pubDate>Mon, 21 Jul 2014 10:41:56 +0000</pubDate>
      
      <guid>https://anderspitman.net/2014/07/21/asterisk-ari-quickstart-in-python/</guid>
      <description>The purpose of this post is to get Asterisk users up and running with the Asterisk 12 ARI with Python as quickly as possible. I&amp;rsquo;m assuming:
 You know what the ARI is You know at least the basics of using Asterisk You have Asterisk 12 installed You have Python with pip installed (preferably inside a virtualenv)  I followed this other tutorial closely, particularly the implementation of the websocket stuff:</description>
    </item>
    
    <item>
      <title>Setting up an IPython Development Environment from Source</title>
      <link>https://anderspitman.net/2014/06/15/setting-up-an-ipython-development-environment-from-source/</link>
      <pubDate>Sun, 15 Jun 2014 22:40:00 +0000</pubDate>
      
      <guid>https://anderspitman.net/2014/06/15/setting-up-an-ipython-development-environment-from-source/</guid>
      <description>I recently decided to start hacking on the excellent IPython project. I wanted to have full control over the versions of all the software involved, which meant compiling Python from source. This guide is intended to take one through the entire process of setting up a custom Python build with virtualenv in the least number of steps possible, with the final goal of building a virtualenv specifically for IPython dev work.</description>
    </item>
    
  </channel>
</rss>